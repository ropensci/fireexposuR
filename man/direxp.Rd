% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/direxp.R
\name{direxp}
\alias{direxp}
\title{Conduct a directional exposure assessment}
\usage{
direxp(exposure, value, plot = FALSE, map = FALSE, table = FALSE)
}
\arguments{
\item{exposure}{SpatRaster from [exposure()]}

\item{value}{Spatvector of value as a point or simplified polygon}

\item{plot}{Boolean, when `TRUE`: returns a standardized directional plot.
The default is `FALSE`.}

\item{map}{Boolean, when `TRUE`: returns a map of the viable transects. The
default is `FALSE`.}

\item{table}{Boolean, when `TRUE`: returns a table of viable transects. The
default is `FALSE`.}
}
\value{
a SpatVector of the transects with a attributes: degree, segment,
  viable. Unless:
     * `plot = TRUE`: a standardized plot as a ggplot object
     * `map = TRUE`: a standardized map as a ggplot object
     * `table = TRUE`: a data frame with attributes
}
\description{
`direxp()` automates the directional vulnerability assessment
  methods from Beverly and Forbes 2023. This function can return the
  assessment transects as:
 * a spatial feature of transect segments
 * a standardized map with a satellite imagery base map as a ggplot object
 * a standardized radial plot as a ggplot object
 * a table of each transect segment as a data frame
}
\examples{
# generate example hazard data -----------------------------
set.seed(0)
e <- c(45,55,495,505) * 10000
r <- terra::rast(resolution = 100, extent = terra::ext(e))
terra::values(r) <- sample(c(0,1), terra::ncell(r), replace = TRUE)
terra::crs(r) <- "EPSG:32608"
r <- terra::sieve(r, threshold = 50, directions = 4)
haz <- terra::sieve(r, threshold = 500, directions = 4)
# generate an example point ---------------------------------
wkt <- "POINT (500000 5000000)"
pt <- terra::vect(wkt, crs = haz)
# -----------------------------------------------------------

exp <- exposure(haz)

# return a SpatVector that can be used in R or exported
direxp(exp, pt)

# generate a map in R using a point value
# note: example data is drawn in the ocean so basemap is not representative
direxp(exp, pt, map = TRUE)

# or generate as a standardized plot for the same point
direxp(exp, pt, plot = TRUE)
}

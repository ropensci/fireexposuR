[{"path":"https://heyairf.github.io/fireexposuR/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to fireexposuR","title":"Contributing to fireexposuR","text":"outlines propose change fireexposuR. detailed discussion contributing tidyverse packages, please see development contributing guide code review principles.","code":""},{"path":"https://heyairf.github.io/fireexposuR/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to fireexposuR","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://heyairf.github.io/fireexposuR/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to fireexposuR","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"https://heyairf.github.io/fireexposuR/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to fireexposuR","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"heyairf/fireexposuR\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://heyairf.github.io/fireexposuR/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to fireexposuR","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://heyairf.github.io/fireexposuR/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to fireexposuR","text":"Please note fireexposuR project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://heyairf.github.io/fireexposuR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://heyairf.github.io/fireexposuR/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://heyairf.github.io/fireexposuR/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://heyairf.github.io/fireexposuR/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://heyairf.github.io/fireexposuR/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://heyairf.github.io/fireexposuR/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://heyairf.github.io/fireexposuR/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://heyairf.github.io/fireexposuR/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://heyairf.github.io/fireexposuR/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://heyairf.github.io/fireexposuR/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://heyairf.github.io/fireexposuR/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://heyairf.github.io/fireexposuR/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://heyairf.github.io/fireexposuR/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://heyairf.github.io/fireexposuR/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://heyairf.github.io/fireexposuR/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://heyairf.github.io/fireexposuR/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://heyairf.github.io/fireexposuR/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://heyairf.github.io/fireexposuR/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://heyairf.github.io/fireexposuR/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://heyairf.github.io/fireexposuR/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://heyairf.github.io/fireexposuR/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://heyairf.github.io/fireexposuR/articles/communityscale.html","id":"usage-example","dir":"Articles","previous_headings":"","what":"Usage example","title":"communityscale","text":"basic example shows workflow assess wildfire exposure community using multiple functions fireexposuR package. package automates methods within various research products can accessed following links: Beverly et al. 2010 Beverly et al. 2021 Beverly Forbes 2023","code":"library(fireexposuR)"},{"path":"https://heyairf.github.io/fireexposuR/articles/communityscale.html","id":"data-preperation","dir":"Articles","previous_headings":"Usage example","what":"Data preperation","title":"communityscale","text":"First, example data generated imaginary town: example data represents sort data pre-prepared user assessment.","code":"library(terra) #> terra 1.7.83 # read example hazard data ---------------------------------- filepath <- \"extdata/hazard.tif\" haz <- terra::rast(system.file(filepath, package = \"fireexposuR\")) # read example AOI filepath <- \"extdata/builtsimpleexamplegeom.csv\" g <- read.csv(system.file(filepath, package = \"fireexposuR\")) aoi <- terra::vect(as.matrix(g), \"polygons\", crs = haz) # generate random points pts <- terra::spatSample(aoi, 200) #' # ----------------------------------------------------------"},{"path":"https://heyairf.github.io/fireexposuR/articles/communityscale.html","id":"hazard-data","dir":"Articles","previous_headings":"Usage example > Data preperation","what":"Hazard data","title":"communityscale","text":"haz layer binary raster represents wildland fuels able generate long-range embers transmission distance 500 meters:","code":""},{"path":"https://heyairf.github.io/fireexposuR/articles/communityscale.html","id":"area-of-interest-and-values-data","dir":"Articles","previous_headings":"Usage example > Data preperation","what":"Area of interest and values data","title":"communityscale","text":"aoi layer polygon representing built environment imaginary town. pts feature represents centroids homes structures within community.","code":""},{"path":"https://heyairf.github.io/fireexposuR/articles/communityscale.html","id":"compute-exposure","dir":"Articles","previous_headings":"Usage example","what":"Compute exposure","title":"communityscale","text":"Now, use hazard data compute exposure long-range ember transmission.","code":"library(fireexposuR) exp <- fire_exp(haz, tdist = \"l\") #> Warning in rgl.init(initValue, onlyNULL): RGL: unable to open X11 display #> Warning: 'rgl.init' failed, running with 'rgl.useNULL = TRUE'."},{"path":"https://heyairf.github.io/fireexposuR/articles/communityscale.html","id":"visualize-exposure","dir":"Articles","previous_headings":"Usage example","what":"Visualize exposure","title":"communityscale","text":"exposure raster rest package functions can used visualize different ways. landscape, can map exposure continuous scale fire_exp_map_cont():  can also see exposure distributed within built environment exposure classifications area interest fire_exp_map_class(). Note: imaginary town middle Pacific Ocean base map provide reference.  map gives us better understanding areas town fire entry points. can also summarize area fire_exp_summary() want know proportional distributions class. also data values within built environment, can map summarize table well.  information, community now identified 12 structures extremely exposed long-range embers landscape northwest community. potential area prioritize wildfire mitigation strategies.","code":"fire_exp_map_cont(exp) #> <SpatRaster> resampled to 501264 cells. fire_exp_map_class(exp, classify = \"local\", aoi) fire_exp_summary(exp, classify = \"local\", aoi) #>      class npixels       prop  aream2 areaha #> 1      Nil     595 0.70749108 5950000    595 #> 2      Low      90 0.10701546  900000     90 #> 3 Moderate      54 0.06420927  540000     54 #> 4     High      58 0.06896552  580000     58 #> 5  Extreme      44 0.05231867  440000     44 # extract exposure to the values feature vals_ext <- fire_exp_extract(exp, pts) # summary table  fire_exp_extract_vis(vals_ext, classify = \"local\") #>   scale method    class   n  prop #> 1 local  Point      Nil 144 0.720 #> 2 local  Point      Low  21 0.105 #> 3 local  Point Moderate  12 0.060 #> 4 local  Point     High  13 0.065 #> 5 local  Point  Extreme  10 0.050  # map fire_exp_extract_vis(vals_ext, classify = \"local\", map = TRUE)"},{"path":"https://heyairf.github.io/fireexposuR/articles/communityscale.html","id":"directional-vulnerability","dir":"Articles","previous_headings":"Usage example > Visualize exposure","what":"Directional vulnerability","title":"communityscale","text":"make believe town may also wish assess directional vulnerability wildfire towards community. assessment identifies linear pathways exposure landscape toward value. Note: imaginary town middle Pacific Ocean base map provide reference.  Now can see although northwest corner town potential entry point, pathway location viable 5 kilometers . southeast pathway might concerning pathway covers full 15 kilometers. Depending local knowledge, assessment identify areas concern. example, region consistent patterns southwest winds may priority area fuel reduction treatments. perhaps popular outdoor recreation area northwest close community, case shorter pathway might concern increased human ignition potential area.","code":"transects <- fire_exp_dir(exp, aoi) fire_exp_dir_plot(transects, aoi, map = TRUE) #> <SpatRaster> resampled to 501120 cells."},{"path":"https://heyairf.github.io/fireexposuR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Air Forbes. Author, maintainer. Jennifer Beverly. Thesis advisor.","code":""},{"path":"https://heyairf.github.io/fireexposuR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Forbes , Beverly JL (2024). fireexposuR: Compute Visualize Wildfire Exposure. R Package version xxx, https://github.com/heyairf/fireexposuR.","code":"@Manual{fireexposuR,   title = {fireexposuR: Compute and Visualize Wildfire Exposure},   author = {Air M. Forbes and Jennifer L. Beverly},   note = {R Package version xxx},   year = {2024},   url = {https://github.com/heyairf/fireexposuR}, }"},{"path":"https://heyairf.github.io/fireexposuR/index.html","id":"fireexposur","dir":"","previous_headings":"","what":"Compute and Visualize Wildfire Exposure","title":"Compute and Visualize Wildfire Exposure","text":"goal fireexposuR provide standardized accessible platform computation analysis wildfire exposure. Wildfire exposure assessments decision support tool wildfire management can applied multiple temporal horizons spatial extents. package automates methods previously documented series scientific publications. Introduces wildfire exposure wildfire transmission distances community scale assessments Validation wildfire exposure metric landscape scale observed fire history Directional vulnerability assessment methodology functions package require pre-preparation data; accompanying paper (currently preparation) details suggestions data acquisition preparation accordance various budget limitations user experience levels. initial release package provides collection functions assist users conducting wildfire exposure directional vulnerability assessments values landscapes, includes methods validating metric area interest. Outputs functions include spatial data, tables, graphics, maps can analyzed modified directly R exported use applications.","code":""},{"path":"https://heyairf.github.io/fireexposuR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Compute and Visualize Wildfire Exposure","text":"can install development version fireexposuR GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"heyairf/fireexposuR\")"},{"path":"https://heyairf.github.io/fireexposuR/index.html","id":"usage-example","dir":"","previous_headings":"","what":"Usage example","title":"Compute and Visualize Wildfire Exposure","text":"basic example shows workflow assess wildfire exposure landscape within area interest.","code":""},{"path":"https://heyairf.github.io/fireexposuR/index.html","id":"data-preparation","dir":"","previous_headings":"Usage example","what":"Data preparation","title":"Compute and Visualize Wildfire Exposure","text":"First, example data generated:","code":"library(terra) #> terra 1.7.78 library(fireexposuR) # read example hazard data --------------------------------- filepath <- \"extdata/hazard.tif\" haz <- rast(system.file(filepath, package = \"fireexposuR\")) # read example AOI polygon --------------------------------- filepath <- \"extdata/builtsimpleexamplegeom.csv\" g <- read.csv(system.file(filepath, package = \"fireexposuR\")) aoi <- vect(as.matrix(g), \"polygons\", crs = haz) # ----------------------------------------------------------"},{"path":"https://heyairf.github.io/fireexposuR/index.html","id":"hazard-data","dir":"","previous_headings":"Usage example > Data preparation","what":"Hazard data","title":"Compute and Visualize Wildfire Exposure","text":"haz layer binary raster represents wildland fuels potential generate embers distance 500 meters value 1.","code":""},{"path":"https://heyairf.github.io/fireexposuR/index.html","id":"area-of-interest","dir":"","previous_headings":"Usage example > Data preparation","what":"Area of interest","title":"Compute and Visualize Wildfire Exposure","text":"aoi layer polygon representing localized area interest (e.g., built environment community, sensitive habitat, campground, etc.) shown red.","code":""},{"path":"https://heyairf.github.io/fireexposuR/index.html","id":"compute-exposure","dir":"","previous_headings":"Usage example","what":"Compute exposure","title":"Compute and Visualize Wildfire Exposure","text":"Now, use hazard data compute exposure long-range ember transmission.","code":"library(fireexposuR) exp <- fire_exp(haz, tdist = \"l\")"},{"path":"https://heyairf.github.io/fireexposuR/index.html","id":"visualize-exposure","dir":"","previous_headings":"Usage example","what":"Visualize exposure","title":"Compute and Visualize Wildfire Exposure","text":"exposure raster rest package functions can used visualize different ways. landscape, can map exposure continuous scale mapexpcont():  can also see exposure distributed within localized area interest exposure classifications using mapexpclass(). Now can see within area interest northwest corner potential entry point long-range embers landscape. Note: imaginary area interest middle Pacific Ocean base map provide reference.","code":"fire_exp_map_cont(exp) #> <SpatRaster> resampled to 501264 cells. fire_exp_map_class(exp, classify = \"local\", aoi)"},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the wildfire exposure metric — fire_exp","title":"Compute the wildfire exposure metric — fire_exp","text":"fire_exp() computes wildfire exposure metric hazard fuel raster. hazard fuel raster must prepared user. Forbes Beverly 2024 (manuscript preparation) details suggestions data acquisition preparation accordance various budget limitations user experience levels. Computing wildfire exposure different transmission distances may require unique hazard rasters distance. See Beverly et al. 2021, Beverly et al. 2010, Schmidt et al. 2024 references hazard raster preparation.","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the wildfire exposure metric — fire_exp","text":"","code":"fire_exp(hazard, tdist = c(\"l\", \"s\", \"r\"), nonburnable)"},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the wildfire exposure metric — fire_exp","text":"hazard SpatRaster represents hazardous fuels transmission distance specified tdist tdist character vector, can : \"l\" long-range embers (Default), \"s\" short-range embers , \"r\" radiant heat nonburnable (optional) SpatRaster represents non-burnable landscape. cells receive wildfire (e.g. open water, rock) cells natural (e.g. built environment, irrigated agricultural areas) value 1, cells NODATA. parameter provided preparing data fire_exp_validate()","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the wildfire exposure metric — fire_exp","text":"SpatRaster object exposure values 0-1","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the wildfire exposure metric — fire_exp","text":"minimum raster resolution requirements transmission distance. Radiant heat requires data 10 m finer, short-range embers 90 m finer, long-range embers requires 150 m finer.","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the wildfire exposure metric — fire_exp","text":"","code":"# read example hazard data ---------------------------------- filepath <- \"extdata/hazard.tif\" haz <- terra::rast(system.file(filepath, package = \"fireexposuR\")) # -----------------------------------------------------------  # compute long range exposure exp <- fire_exp(haz, tdist = \"l\") #> Warning: RGL: unable to open X11 display #> Warning: 'rgl.init' failed, running with 'rgl.useNULL = TRUE'. exp #> class       : SpatRaster  #> dimensions  : 1000, 1000, 1  (nrow, ncol, nlyr) #> resolution  : 100, 100  (x, y) #> extent      : 450000, 550000, 4950000, 5050000  (xmin, xmax, ymin, ymax) #> coord. ref. : WGS 84 / UTM zone 8N (EPSG:32608)  #> source(s)   : memory #> varname     : hazard  #> name        : exposure  #> min value   :        0  #> max value   :        1   # each transmission distance has a resolution requirement and exposure() will # not run if resolution is too coarse try(fire_exp(haz, tdist = \"r\")) #> Error in fire_exp(haz, tdist = \"r\") :  #>   Insufficient resolution for radiant heat exposure assessment"},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_adjust.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the wildfire exposure metric with custom transmission distances — fire_exp_adjust","title":"Compute the wildfire exposure metric with custom transmission distances — fire_exp_adjust","text":"advanced users. transmission distances wildfire exposure literature representative wildland fuels area interest, function can used change transmission distance custom distance. highly recommended exposure layers produced function validated observed fire history using fire_exp_validate() function.","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_adjust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the wildfire exposure metric with custom transmission distances — fire_exp_adjust","text":"","code":"fire_exp_adjust(hazard, tdist, nonburnable)"},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_adjust.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the wildfire exposure metric with custom transmission distances — fire_exp_adjust","text":"hazard SpatRaster represents hazardous fuels transmission distance specified tdist tdist Numeric, transmission distance meters nonburnable (Optional)  SpatRaster represents non-burnable landscape. cells receive wildfire (e.g. open water, rock) cells natural (e.g. built environment, irrigated agricultural areas) value 1, cells NODATA. parameter provided preparing data fire_exp_validate()","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_adjust.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the wildfire exposure metric with custom transmission distances — fire_exp_adjust","text":"SpatRaster object exposure values","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_adjust.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the wildfire exposure metric with custom transmission distances — fire_exp_adjust","text":"","code":"# read example hazard data ---------------------------------- filepath <- \"extdata/hazard.tif\" haz <- terra::rast(system.file(filepath, package = \"fireexposuR\")) # -----------------------------------------------------------  # compute long range exposure with custom disance of 800 m exp <- fire_exp_adjust(haz, tdist = 800)"},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Conduct a directional exposure assessment — fire_exp_dir","title":"Conduct a directional exposure assessment — fire_exp_dir","text":"fire_exp_dir() automates directional vulnerability assessment methods Beverly Forbes 2023. function can return assessment transects spatial feature transect segments table transect segment data frame exposure layer value layer must CRS defined. polygon used, must simple feature without holes complex geometry. function run polygon simplified . See Forbes Beverly 2024 (Manuscript preparation) data preparation advice.","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conduct a directional exposure assessment — fire_exp_dir","text":"","code":"fire_exp_dir(exposure, value, table = FALSE)"},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conduct a directional exposure assessment — fire_exp_dir","text":"exposure SpatRaster (e.g. fire_exp()) value Spatvector value point simplified polygon table Boolean, TRUE: returns table instead feature. default FALSE.","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conduct a directional exposure assessment — fire_exp_dir","text":"SpatVector transects attributes: degree, segment, viable. Unless: table = TRUE: data frame","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conduct a directional exposure assessment — fire_exp_dir","text":"","code":"# read example hazard data ---------------------------------- filepath <- \"extdata/hazard.tif\" haz <- terra::rast(system.file(filepath, package = \"fireexposuR\")) # generate an example point --------------------------------- wkt <- \"POINT (500000 5000000)\" pt <- terra::vect(wkt, crs = haz) # -----------------------------------------------------------  exp <- fire_exp(haz)  fire_exp_dir(exp, pt) #>  class       : SpatVector  #>  geometry    : lines  #>  dimensions  : 1080, 3  (geometries, attributes) #>  extent      : 485006, 514994, 4985006, 5014994  (xmin, xmax, ymin, ymax) #>  coord. ref. : WGS 84 / UTM zone 8N (EPSG:32608)  #>  names       :   deg   seg viable #>  type        : <int> <chr>  <num> #>  values      :     1   to5      0 #>                    1  to10      0 #>                    1  to15      1"},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_dir_multi.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a directional load plot or table for multiple values — fire_exp_dir_multi","title":"Generate a directional load plot or table for multiple values — fire_exp_dir_multi","text":"fire_exp_dir_multi() automates directional vulnerability assessment methods Beverly Forbes 2023. function can return directional loads : standardized radial plot ggplot object table summarizing degree included feature","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_dir_multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a directional load plot or table for multiple values — fire_exp_dir_multi","text":"","code":"fire_exp_dir_multi(exposure, values, plot = FALSE, all = FALSE)"},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_dir_multi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a directional load plot or table for multiple values — fire_exp_dir_multi","text":"exposure SpatRaster fire_exp() values Spatvector value point simplified polygon plot Boolean, TRUE: returns standardized directional plot. default FALSE. Boolean, TRUE: considers 3 segments (0-15km) directional transects. FALSE: segments 5-15 km included (Default)","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_dir_multi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a directional load plot or table for multiple values — fire_exp_dir_multi","text":"data.frame features attributes: value featureID, degree, to5 (binary), to10(binary), t015(binary), full(binary), outer (binary). Unless: * plot = TRUE: standardized plot ggplot object","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_dir_multi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a directional load plot or table for multiple values — fire_exp_dir_multi","text":"","code":"#' # read example hazard data ---------------------------------- filepath <- \"extdata/hazard.tif\" haz <- terra::rast(system.file(filepath, package = \"fireexposuR\")) # example points across the landscape e <- terra::buffer(terra::vect(terra::ext(haz), crs = haz), -15500) pts <- terra::spatSample(e, 20) # ----------------------------------------------------------  exp <- fire_exp(haz, tdist = \"l\") # this example will take a while to run if (FALSE) { # \\dontrun{ fire_exp_dir_multi(exp, pts, plot = TRUE) } # }"},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_dir_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"visualize directional exposure — fire_exp_dir_plot","title":"visualize directional exposure — fire_exp_dir_plot","text":"fire_exp_dir_plot() plots directional exposure following methods Beverly Forbes 2023 standardized radial plot, mapped basemap, table.","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_dir_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"visualize directional exposure — fire_exp_dir_plot","text":"","code":"fire_exp_dir_plot(transects, value, map = FALSE)"},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_dir_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"visualize directional exposure — fire_exp_dir_plot","text":"transects SpatVector (output fire_exp_dir()) value Spatvector value point simplified polygon used fire_exp_dir() map Boolean, TRUE: returns map viable transects. default FALSE","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_dir_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"visualize directional exposure — fire_exp_dir_plot","text":"standardized plot ggplot object, map = TRUE standardized map ggplot object","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_dir_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"visualize directional exposure — fire_exp_dir_plot","text":"","code":"# read example hazard data ---------------------------------- filepath <- \"extdata/hazard.tif\" haz <- terra::rast(system.file(filepath, package = \"fireexposuR\")) # generate an example point --------------------------------- wkt <- \"POINT (500000 5000000)\" pt <- terra::vect(wkt, crs = haz) # -----------------------------------------------------------  exp <- fire_exp(haz)  # compute transects transects <- fire_exp_dir(exp, pt)  # radial plot of directional exposure fire_exp_dir_plot(transects, pt)   #' # mapped directional exposure transects # note: example data is drawn in the ocean so basemap is not representative fire_exp_dir_plot(transects, pt, map = TRUE) #> <SpatRaster> resampled to 500554 cells."},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract exposure values to features — fire_exp_extract","title":"Extract exposure values to features — fire_exp_extract","text":"fire_exp_extract() extracts underlying exposure value feature values layer. Values can provided either points polygons, must singlepart features (.e. attribute table one row per value). values polygon features maximum mean exposure computed.","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract exposure values to features — fire_exp_extract","text":"","code":"fire_exp_extract(exposure, values)"},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract exposure values to features — fire_exp_extract","text":"exposure SpatRaster (e.g. fire_exp()) values Spatvector points polygons","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract exposure values to features — fire_exp_extract","text":"SpatVector object new attributes","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_extract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract exposure values to features — fire_exp_extract","text":"","code":"# read example hazard data ---------------------------------- filepath <- \"extdata/hazard.tif\" haz <- terra::rast(system.file(filepath, package = \"fireexposuR\")) # read example AOI filepath <- \"extdata/builtsimpleexamplegeom.csv\" g <- read.csv(system.file(filepath, package = \"fireexposuR\")) v <- terra::vect(as.matrix(g), \"polygons\", crs = haz) # generate random points pts <- terra::spatSample(v, 200) # ----------------------------------------------------------  exp <- fire_exp(haz)  # extract exposure to point values fire_exp_extract(exp, pts) #>  class       : SpatVector  #>  geometry    : points  #>  dimensions  : 200, 1  (geometries, attributes) #>  extent      : 497972.4, 501772.4, 4998467, 5001378  (xmin, xmax, ymin, ymax) #>  coord. ref. : WGS 84 / UTM zone 8N (EPSG:32608)  #>  names       : exposure #>  type        :    <num> #>  values      :    0.375 #>                       0 #>                       0"},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_extract_vis.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize by extracted exposure — fire_exp_extract_vis","title":"Visualize by extracted exposure — fire_exp_extract_vis","text":"fire_exp_extract_vis() standardizes visualization outputs fire_exp_extract() summary table map classifying exposure predetermined exposure classes. Landscape classification breaks : Low (0-20%) Moderate (20-40%) High (40-60%), High (60-80%) Extreme (80-100%) Local classification breaks : Nil (0%) Low (>0-15%) Moderate (15-30%) High (30-45%) Extreme (45%+)","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_extract_vis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize by extracted exposure — fire_exp_extract_vis","text":"","code":"fire_exp_extract_vis(   values_ext,   method = c(\"max\", \"mean\"),   classify = c(\"local\", \"landscape\"),   map = FALSE )"},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_extract_vis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize by extracted exposure — fire_exp_extract_vis","text":"values_ext Spatvector points polygons fire_exp_extract() method character, either \"max\" \"mean\". values_ext polygons default \"max\".parameter ignored values_ext point features. classify character, either \"local\" \"landscape\" specify classification scheme use. default \"local\" map Boolean. TRUE, map returned ggplot object. default FALSE.","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_extract_vis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize by extracted exposure — fire_exp_extract_vis","text":"summary table returned data frame object, Unless: map = TRUE: ggplot object","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_extract_vis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize by extracted exposure — fire_exp_extract_vis","text":"","code":"# read example hazard data ---------------------------------- filepath <- \"extdata/hazard.tif\" haz <- terra::rast(system.file(filepath, package = \"fireexposuR\")) # read example AOI polygon geometry filepath <- \"extdata/builtsimpleexamplegeom.csv\" g <- read.csv(system.file(filepath, package = \"fireexposuR\")) v <- terra::vect(as.matrix(g), \"polygons\", crs = haz) # generate random points within polygon pts <- terra::spatSample(v, 200) # ----------------------------------------------------------  exp <- fire_exp(haz)  vals_exp <- fire_exp_extract(exp, pts)  # summarize example points in a table fire_exp_extract_vis(vals_exp, classify = \"local\") #>   scale method    class   n prop #> 1 local  Point      Nil 144 0.72 #> 2 local  Point      Low  26 0.13 #> 3 local  Point Moderate  10 0.05 #> 4 local  Point     High  10 0.05 #> 5 local  Point  Extreme  10 0.05  # visualize example points in standardized map fire_exp_extract_vis(vals_exp, map = TRUE)"},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_map_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Map exposure with a classified scale — fire_exp_map_class","title":"Map exposure with a classified scale — fire_exp_map_class","text":"fire_exp_map_class() produces standardized map exposure exposure classes. function dynamically pulls map tiles base map, recommended area interest localized. zoom level may need adjusted based extent data; see OpenStreetMap Wiki information zoom levels. mapping large extents recommended (faster) use fire_exp_map_cont() use base maps. Scales colors determined parameter classify can set \"local\" \"landscape\". Landscape classification breaks : Low (0-20%) Moderate (20-40%) High (40-60%), High (60-80%) Extreme (80-100%) Local classification breaks : Nil (0%) Low (>0-15%) Moderate (15-30%) High (30-45%) Extreme (45%+)","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_map_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map exposure with a classified scale — fire_exp_map_class","text":"","code":"fire_exp_map_class(exposure, classify = c(\"local\", \"landscape\"), aoi, zoom)"},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_map_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map exposure with a classified scale — fire_exp_map_class","text":"exposure SpatRaster (e.g. fire_exp()) classify character, either \"local\" \"landscape\" specify classification scheme use. aoi SpatVector area interest mask exposure zoom (Optional). numeric, set zoom level basemap based extent data defaults appropriate. Defaults : classify = \"local\" zoom level default 13 classify = \"landscape\" zoom level default 6","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_map_class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map exposure with a classified scale — fire_exp_map_class","text":"standardized map returned ggplot object","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_map_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map exposure with a classified scale — fire_exp_map_class","text":"","code":"# read example hazard data ---------------------------------- filepath <- \"extdata/hazard.tif\" haz <- terra::rast(system.file(filepath, package = \"fireexposuR\")) # generate example AOI polygon ----------------------------- filepath <- \"extdata/builtsimpleexamplegeom.csv\" g <- read.csv(system.file(filepath, package = \"fireexposuR\")) v <- terra::vect(as.matrix(g), \"polygons\", crs = haz) # ----------------------------------------------------------  exp <- fire_exp(haz) fire_exp_map_class(exp, classify = \"local\", v)"},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_map_cont.html","id":null,"dir":"Reference","previous_headings":"","what":"Map exposure with a continuous scale — fire_exp_map_cont","title":"Map exposure with a continuous scale — fire_exp_map_cont","text":"fire_exp_map_cont() produces standardized map exposure continuous scale. optional area interest can used mask. ggplot object returned can modified ggplot library.","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_map_cont.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map exposure with a continuous scale — fire_exp_map_cont","text":"","code":"fire_exp_map_cont(exposure, aoi)"},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_map_cont.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map exposure with a continuous scale — fire_exp_map_cont","text":"exposure SpatRaster fire_exp() aoi (optional) SpatVector area interest mask exposure","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_map_cont.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map exposure with a continuous scale — fire_exp_map_cont","text":"map returned ggplot object","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_map_cont.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map exposure with a continuous scale — fire_exp_map_cont","text":"","code":"# read example hazard data ---------------------------------- filepath <- \"extdata/hazard.tif\" haz <- terra::rast(system.file(filepath, package = \"fireexposuR\")) # -------------------------------------------------------------  exp <- fire_exp(haz)  fire_exp_map_cont(exp) #> <SpatRaster> resampled to 501264 cells."},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize exposure by class — fire_exp_summary","title":"Summarize exposure by class — fire_exp_summary","text":"fire_exp_summary() creates summary table exposure specified classification scheme. table reports number pixels, proportion, area hectares meters squared class. Landscape classification breaks : Low (0-20%) Moderate (20-40%) High (40-60%), High (60-80%) Extreme (80-100%) Local classification breaks : Nil (0%) Low (>0-15%) Moderate (15-30%) High (30-45%) Extreme (45%+)","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize exposure by class — fire_exp_summary","text":"","code":"fire_exp_summary(exposure, aoi, classify = c(\"landscape\", \"local\"))"},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize exposure by class — fire_exp_summary","text":"exposure SpatRaster fire_exp() aoi (optional) SpatVector area interest mask exposure summary classify character, either \"landscape\" \"local\". default \"landscape\".","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize exposure by class — fire_exp_summary","text":"summary table data frame object","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize exposure by class — fire_exp_summary","text":"","code":"#' # read example hazard data ---------------------------------- filepath <- \"extdata/hazard.tif\" haz <- terra::rast(system.file(filepath, package = \"fireexposuR\")) # generate example AOI polygon ----------------------------- filepath <- \"extdata/builtsimpleexamplegeom.csv\" g <- read.csv(system.file(filepath, package = \"fireexposuR\")) v <- terra::vect(as.matrix(g), \"polygons\", crs = haz) # ----------------------------------------------------------  exp <- fire_exp(haz)  # for full extent of data fire_exp_summary(exp, classify = \"landscape\") #>       class npixels      prop     aream2 areaha #> 1       Low  320073 0.3265718 3200730000 320073 #> 2  Moderate  118269 0.1206703 1182690000 118269 #> 3      High  121896 0.1243710 1218960000 121896 #> 4 Very High  115884 0.1182369 1158840000 115884 #> 5   Extreme  303978 0.3101500 3039780000 303978  # for a masked area fire_exp_summary(exp, v, classify = \"landscape\") #>       class npixels        prop  aream2 areaha #> 1       Low     703 0.835909631 7030000    703 #> 2  Moderate      73 0.086801427  730000     73 #> 3      High      62 0.073721760  620000     62 #> 4 Very High       3 0.003567182   30000      3"},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_validate.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate exposure with observed fires — fire_exp_validate","title":"Validate exposure with observed fires — fire_exp_validate","text":"advanced users. fire_exp_validate() compares proportion exposure classes study area proportion exposure classes within burned areas. random sample taken account spatial autocorrelation.","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_validate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate exposure with observed fires — fire_exp_validate","text":"","code":"fire_exp_validate(   burnableexposure,   fires,   aoi,   samplesize = 0.005,   plot = FALSE )"},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_validate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate exposure with observed fires — fire_exp_validate","text":"burnableexposure SpatRaster exposure, non-burnable cells removed using optional parameter fire_exp(). fires SpatVector observed fire perimeters aoi (Optional) SpatVector delineates area interest samplesize Proportion area sample. default 0.005 (0.5%) plot Boolean, TRUE: returns plot expected observed exposure class proportions within entire extent sampled areas. default FALSE.","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_validate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate exposure with observed fires — fire_exp_validate","text":"table plots","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/fire_exp_validate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate exposure with observed fires — fire_exp_validate","text":"","code":"# read example hazard data ---------------------------------- filepath <- \"extdata/hazard.tif\" haz <- terra::rast(system.file(filepath, package = \"fireexposuR\")) # generate example non-burn data ----------------------------- filepath <- \"extdata/builtsimpleexamplegeom.csv\" g <- read.csv(system.file(filepath, package = \"fireexposuR\")) v <- terra::vect(as.matrix(g), \"polygons\", crs = haz) nb <- terra::rasterize(v, haz) # generate example fire polygons ----------------------------- pts <- terra::spatSample(terra::rescale(haz, 0.8), 30, as.points = TRUE) fires <- terra::buffer(pts, 800) # ---------------------------------------------------------- # PLEASE NOTE THIS RANDOMLY GENERATED DATA DOES NOT GIVE MEANINGFUL RESULTS exp <- fire_exp(haz, nonburnable = nb) fire_exp_validate(exp, fires) #>    exposure  classexp     of    group      n       prop #> 1         1       Low  Total Expected 319405 0.32615344 #> 2         2  Moderate  Total Expected 118204 0.12070143 #> 3         3      High  Total Expected 121840 0.12441426 #> 4         4 Very High  Total Expected 115882 0.11833037 #> 5         5   Extreme  Total Expected 303978 0.31040050 #> 6         1       Low  Total Observed   2427 0.34716064 #> 7         2  Moderate  Total Observed    666 0.09526534 #> 8         3      High  Total Observed    743 0.10627950 #> 9         4 Very High  Total Observed    713 0.10198827 #> 10        5   Extreme  Total Observed   2442 0.34930625 #> 11        1       Low Sample Expected   1598 0.32632224 #> 12        2  Moderate Sample Expected    615 0.12558709 #> 13        3      High Sample Expected    569 0.11619359 #> 14        4 Very High Sample Expected    609 0.12436185 #> 15        5   Extreme Sample Expected   1506 0.30753523 #> 16        1       Low Sample Observed     14 0.40000000 #> 17        2  Moderate Sample Observed      2 0.05714286 #> 18        3      High Sample Observed      7 0.20000000 #> 19        4 Very High Sample Observed      3 0.08571429 #> 20        5   Extreme Sample Observed      9 0.25714286 #' fire_exp_validate(exp, fires, plot = TRUE)"},{"path":"https://heyairf.github.io/fireexposuR/reference/fireexposuR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"fireexposuR: Compute and Visualize Wildfire Exposure — fireexposuR-package","title":"fireexposuR: Compute and Visualize Wildfire Exposure — fireexposuR-package","text":"package computes wildfire exposure using methods Beverly et al. (2010), Beverly et al. (2021), Beverly Forbes (2023). provides functions standardize mapping visualization wildfire exposure. package requires pre-processing data docomented Forbes Beverly (preparation).","code":""},{"path":[]},{"path":"https://heyairf.github.io/fireexposuR/reference/fireexposuR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"fireexposuR: Compute and Visualize Wildfire Exposure — fireexposuR-package","text":"Maintainer: Air Forbes amforbes@ualberta.ca (ORCID) contributors: Jennifer Beverly [thesis advisor]","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://heyairf.github.io/fireexposuR/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://heyairf.github.io/fireexposuR/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""}]
